package section05

// クラスの基本
// Kotlinでクラスを定義するには以下のように書く
class Human {
    var name = "名無し"
    var age = 25

    // アクセス修飾子も利用可能
    // public：すべてのクラスからアクセス可能
    // protected：定義されたクラスとそのサブクラスからのみアクセス可能
    // internal：同じモジュール内のクラスからのみアクセス可能
    // private：定義されたクラスからのみアクセス可能
    public fun introduce() {
        println("私の名前は、${name}です。 ${age}歳です。")
    }
}

fun main() {
    // インスタンスの生成は関数を呼び出すような形で「クラス名()」と書く
    val sampleHuman = Human()
    // インスタンスのメンバーにアクセスするには、「.」を使えばアクセスできる
    sampleHuman.introduce()
}

// モジュールとは？
// Kotlin のファイルが一体としてコンパイルされるまとまりのこと
// EclipseやAndroid Studioなどのアプリ開発であればプロジェクト単位

// Javaで書かれたプログラムが実行されるまでの流れ
// ①複数のJavaファイルがまとめてコンパイルされてクラスファイルになる
// ②Java Virtual Machine（JVM）がクラスファイルに記載されたコードを解釈・実行

// クラスファイルとは？
// ⇒ソースコードを実行する過程で生成される中間コード、OSに依存しない

// JVMとは？
// ⇒クラスファイルをOSごとに実行可能なコードに変換・実行するソフトウェア

// コンパイルして生成されたクラスファイルがJVM上で動く言語がJava以外にもあり
// それらのことをJVM言語と呼んだりする、もちろんKotlinもJVM言語のひとつ